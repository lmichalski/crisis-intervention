{"version":3,"sources":["fnt/Roboto-Regular.ttf","pages/Menu.tsx","hooks/useGameData.ts","pages/Objectives.tsx","hooks/useLogGameEvent.tsx","pages/Decision.tsx","pages/Video.tsx","pages/Credits.tsx","pages/Instructions.tsx","pages/Feedback.tsx","pages/Settings.tsx","pages/Summary.tsx","pages/Transition.tsx","pages/Principles.tsx","pages/Chart.tsx","pages/Scenario.tsx","hooks/useStorage.ts","hooks/useGameState.ts","util.ts","App.tsx","reportWebVitals.ts","pages/Home.tsx","index.tsx"],"names":["Menu","startNewGame","resumeGame","gamesaved","showPrinciples","strings","pagesToShow","principles","game_id","useParams","className","onClick","id","defaultMessage","description","to","games","emergency","en","require","crisis_intervention","Objectives","paragraph1","paragraph2","bullet_list","map","list_item","LoggingContext","React","createContext","eventLog","pushEvent","event","this","push","LoggingContextProvider","props","Provider","value","useLogGameEvent","loggingContext","useContext","userUuid","undefined","useCallback","level","type","target","label","data","game","user","datetime","Date","console","log","Decision","decisionPoint","onOptionChosen","dp","logGameEvent","message","useState","options","randomizedOptions","optionBoxes","useMemo","opt","next","tabIndex","Video","onVideoFinished","videoposition","setVideoposition","location","useLocation","history","useHistory","videoRef","useRef","iframeRef","skipVideo","time","video","vimeo_url","current","api","videojs","dispose","currentTime","useEffect","handleUserKeyPress","e","keyCode","preventDefault","pathname","goBack","paused","play","pause","window","addEventListener","removeEventListener","iframe","clip","bufferLength","sources","src","subtitles","kind","srclang","ready","on","duration","doc","document","getElementById","style","display","load","player","Player","getVideoTitle","then","title","ref","frameBorder","allow","allowFullScreen","Credits","href","Instructions","minSteps","alt","width","height","Feedback","goNext","role","tagName","feedback","Settings","name","htmlFor","Roboto","default","Font","register","family","format","correctnessColors","correct","half","wrong","correctnessLabels","Summary","gameProgress","decisionPoints","completed","progress","i","find","option","question","answer","length","fontWeight","filter","origin","pdfContent","responses","color","fontFamily","fontSize","lineHeight","backgroundColor","paddingBottom","borderBottom","fileName","blob","url","loading","error","Transition","playNextVideo","Principles","paragraph","Chart","image","introCards","isLocalStorageAvailable","str","localStorage","setItem","removeItem","cookies","put","key","maxAge","cookie","get","cname","ca","decodeURIComponent","split","c","charAt","substring","indexOf","remove","VHEStorage","set","getItem","setObject","o","JSON","stringify","getObject","r","parse","useGameState","storageKey","loaded","uuid","d","getTime","performance","now","replace","Math","random","floor","toString","generateUUID","setGamesaved","currentStep","setCurrentStep","setProgress","fullscreen","newGame","selectOption","nextId","ps","App","gameId","useRouteMatch","path","gameData","locale","Error","useGameData","useIntl","gameState","decisionpoints","navMenuExpanded","setNavMenuExpanded","handleMenuToggleButtonClick","expanded","lastDecisionPoint","currentDecisionPoint","handleStartNewGame","isIE","documentMode","opr","addons","opera","navigator","userAgent","InstallTrigger","test","HTMLElement","safari","pushNotification","StyleMedia","chrome","webstore","runtime","getBrowser","handleResumeGame","handleOptionChosen","handleVideoFinished","colors","menu","instructions","objectives","Scenario","intro","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Home","messages","enMessages","ReactDOM","render","StrictMode","defaultLocale","basename","params","match"],"mappings":"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","file":"static/js/main.e379bdae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import { FormattedMessage } from \"react-intl\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {\n  startNewGame: () => void;\n  resumeGame: () => void;\n  gamesaved: boolean;\n  strings: {\n    title: string;\n  };\n  pagesToShow: {\n    principles: boolean;\n  };\n}\n\nconst Menu: React.FC<iProps> = ({\n  startNewGame,\n  resumeGame,\n  gamesaved,\n  strings,\n  pagesToShow: { principles: showPrinciples },\n}) => {\n  const { game_id } = useParams<{ game_id: string }>();\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"game-buttons\">\n              <li>\n                <button className=\"Link\" onClick={startNewGame}>\n                  <FormattedMessage\n                    id=\"Menu.newGame\"\n                    defaultMessage=\"New Game\"\n                    description=\"New Game Button\"\n                  />\n                </button>\n              </li>\n\n              <div className=\"divider\"></div>\n\n              <li>\n                <button\n                  className={`Link ${gamesaved ? \"active\" : \"disabled\"}`}\n                  onClick={resumeGame}\n                >\n                  <FormattedMessage\n                    id=\"Menu.resumeGame\"\n                    defaultMessage=\"Resume Game\"\n                    description=\"Resume Game Button\"\n                  />\n                </button>\n              </li>\n            </ul>\n            <ul className=\"controls\">\n            <li>\n                <Link to={`/games/${game_id}/instructions/`}>\n                  <FormattedMessage\n                    id=\"Menu.instructions\"\n                    defaultMessage=\"How to Play\"\n                    description=\"How to Play Button\"\n                  />\n                </Link>\n              </li>\n            <li>\n                <Link to={`/games/${game_id}/scenario/`}>\n                  <FormattedMessage\n                    id=\"Menu.scenario\"\n                    defaultMessage=\"Scenario\"\n                    description=\"Scenario Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}/objectives/`}>\n                  <FormattedMessage\n                    id=\"Menu.objectives\"\n                    defaultMessage=\"Learning Objectives\"\n                    description=\"Objectives Button\"\n                  />\n                </Link>\n              </li>\n              {showPrinciples ? (\n                <li>\n                  <Link to={`/games/${game_id}/principles/`}>\n                    <FormattedMessage\n                      id=\"Menu.principles\"\n                      defaultMessage=\"Essential Principles\"\n                      description=\"Principles Button\"\n                    />\n                  </Link>\n                </li>\n              ) : null}\n              <li>\n                <Link to={`/games/${game_id}/chart/`}>\n                  <FormattedMessage\n                    id=\"Menu.chart\"\n                    defaultMessage=\"Client Chart\"\n                    description=\"Client chart button\"\n                  />\n                </Link>\n              </li>\n              {/* <li>\n                <Link to={`/games/${game_id}/settings/`}>\n                  <FormattedMessage\n                    id=\"Menu.settings\"\n                    defaultMessage=\"Settings\"\n                    description=\"Settings Button\"\n                  />\n                </Link>\n              </li> */}\n              <li>\n                <Link to={`/games/${game_id}/credits/`}>\n                  <FormattedMessage\n                    id=\"Menu.credits\"\n                    defaultMessage=\"Credits\"\n                    description=\"Credits Button\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to={`/games/${game_id}./`}>\n                  <FormattedMessage\n                    id=\"Menu.exit\"\n                    defaultMessage=\"Exit Game\"\n                    description=\"Exit Game Button\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useMemo } from \"react\";\n\nconst games: Record<string, Record<string, GameDataShape>> = {\n  emergency: {\n    en: require(\"../games/er_game_data.json\"),\n  },\n  crisis_intervention: {\n    en: require(\"../games/suicidal_patient_data.json\"),\n  },\n};\n\nexport type Correctness = \"correct\" | \"half\" | \"wrong\";\n\nexport interface DecisionPoint {\n  id: number;\n  title?: string;\n  type: string; //\"video\" | \"string\",\n  data: string;\n\n  video:\n    | {\n        vimeo_url: string;\n        videojs_url?: string;\n      }\n    | {\n        vimeo_url?: string;\n        videojs_url: string;\n      }\n    | null;\n\n  correct: Correctness;\n  feedback: string;\n  message: string;\n  options: {\n    label: string;\n    next: number;\n  }[];\n  next: null;\n}\n\ninterface GameDataShape {\n  decisionpoints: DecisionPoint[];\n  colors: {\n    \"--theme-light\": string;\n    \"--theme-dark\": string;\n    \"--theme-primary\": string;\n    \"--primary-text-color\": string;\n    \"--link-color\": string;\n  };\n  strings: {\n    menu: {\n      title: string;\n    };\n    intro: {\n      introCards: string[];\n    };\n    objectives: {\n      paragraph1: string;\n      paragraph2: string;\n      bullet_list: string[];\n    };\n    chart: {\n      image: string;\n    };\n    scenario: {\n      introCards: string[];\n    };\n    principles?: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n    instructions: {\n      paragraph: string;\n      bullet_list: string[];\n    };\n  };\n}\n\nexport const useGameData = (game: string, locale: string): GameDataShape => {\n  const data = useMemo(\n    () => games[game]?.[locale] || games[game]?.[\"en\"],\n    [game, locale]\n  );\n  if (!data) {\n    throw new Error(\"That game could not be found\");\n  }\n  return data;\n};\n","import { FormattedMessage } from \"react-intl\";\nimport \"./Objectives.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph1: string;\n    paragraph2: string;\n    bullet_list: string[];\n  };\n}\n\nconst Objectives: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h2>\n            <FormattedMessage\n              id=\"Objectives.title\"\n              defaultMessage=\"Learning Objectives\"\n              description=\"Learning Objectives title\"\n            />\n          </h2>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph1}</p>\n            <p>{strings.paragraph2}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Objectives;\n","import React, { useCallback, useContext } from \"react\";\n\ninterface Event {\n  game: string;\n  level: string;\n  type: string;\n  target: string;\n  label?: string;\n  data?: string | number;\n  user?: string;\n  datetime: Date;\n}\n\nconst emptyLoggingContext = () => ({\n  eventLog: [] as Event[],\n  pushEvent(event: Event) {\n    this.eventLog.push(event);\n  },\n});\n\nconst LoggingContext = React.createContext(emptyLoggingContext());\n\nexport const LoggingContextProvider: React.FC = (props) => {\n  return <LoggingContext.Provider value={emptyLoggingContext()} {...props} />;\n};\n\nconst useLogGameEvent = () => {\n  const loggingContext = useContext(LoggingContext);\n  const userUuid = undefined; // useUser().uuid\n\n  function logGameEvent(\n    level: string,\n    type: string,\n    target: string,\n    label?: string,\n    data?: string | number\n  ) {\n    loggingContext.pushEvent({\n      game: \"app.name\",\n      level: level,\n      type: type,\n      target: target,\n      label: label,\n      data: data,\n      user: userUuid,\n      datetime: new Date(),\n    });\n\n    console.log(loggingContext.eventLog);\n  }\n\n  return useCallback(logGameEvent, [loggingContext, userUuid]);\n};\n\nexport default useLogGameEvent;\n","import { useMemo, useState } from \"react\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\nimport \"./Decision.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onOptionChosen: (option: number, label: string) => void;\n}\n\nconst Decision: React.FC<iProps> = ({ decisionPoint, onOptionChosen }) => {\n  const logGameEvent = useLogGameEvent();\n\n  const dp = decisionPoint;\n\n  logGameEvent(\"\", \"show\", \"question\", dp.message, \"\");\n\n  const [randomizedOptions] = useState(dp.options); // TODO shuffle these\n\n  const optionBoxes = useMemo(() => {\n    return randomizedOptions.map((opt) => {\n      const chooseOption = () => onOptionChosen(opt.next, opt.label);\n\n      return (\n        <li\n          key={opt.label}\n          className=\"option\"\n          ng-repeat=\"opt in randomizedOptions\"\n        >\n          <button onClick={chooseOption}>{opt.label}</button>\n        </li>\n      );\n    });\n  }, [randomizedOptions, onOptionChosen]);\n\n  // const replayVideo = useCallback(() => {\n  //   /*gtag('event', 'video_replayed', {\n  //     'event_category': 'video',\n  //     'event_label': $scope.dp.data,\n  //     'value': $scope.dp.id\n  //   });*/\n  //   logGameEvent(\"\", \"replay\", \"video\", dp.data, dp.id);\n  //   history.push(`/games/${game_id}/video`);\n  // }, [dp.data, dp.id, history, logGameEvent, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"question\" tabIndex={0}>\n        <div className=\"vertical_outer\">\n          <div className=\"vertical_inner\">{dp?.message}</div>\n        </div>\n      </div>\n      <ul className=\"option_box cf\">{optionBoxes}</ul>\n    </div>\n  );\n};\n\nexport default Decision;\n","import { useEffect, useCallback, useRef } from \"react\";\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\nimport videojs from \"video.js\";\nimport Player from \"@vimeo/player\";\n\nimport { DecisionPoint } from \"../hooks/useGameData\";\n\nimport \"./Video.scss\";\nimport useLogGameEvent from \"../hooks/useLogGameEvent\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n  onVideoFinished: () => void;\n  videoposition: number;\n  setVideoposition: (t: number) => void;\n}\n\nconst Video: React.FC<iProps> = ({\n  decisionPoint: dp,\n  onVideoFinished,\n  videoposition,\n  setVideoposition,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n  const logGameEvent = useLogGameEvent();\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n\n  const skipVideo = useCallback(() => {\n    let time = undefined;\n\n    if (dp?.video?.vimeo_url) {\n    } else if (videoRef.current) {\n      var api = videojs(videoRef.current);\n      api.dispose();\n      time = api?.currentTime();\n    }\n\n    onVideoFinished();\n    logGameEvent(\"\", \"skip\", \"video\", dp?.data, time);\n  }, [dp, logGameEvent, onVideoFinished]);\n\n  useEffect(() => {\n    if (dp && !dp?.video?.vimeo_url) skipVideo();\n  }, [dp, skipVideo]);\n\n  useEffect(() => {\n    const handleUserKeyPress = (e: KeyboardEvent) => {\n      const video = videoRef.current;\n      if (video) {\n        var api = videojs(video);\n        switch (e.keyCode) {\n          case 27:\n            e.preventDefault();\n            if (location.pathname !== \"/\") {\n              if (api && typeof api.currentTime() != \"undefined\") {\n                setVideoposition(api.currentTime());\n              }\n              history.push(`/games/${game_id}/`);\n            } else {\n              history.goBack();\n            }\n            break;\n          case 32:\n            e.preventDefault();\n            if (api) {\n              if (api.paused()) {\n                api.play();\n              } else {\n                api.pause();\n              }\n            }\n            break;\n          case 33:\n            if (api) {\n              api.currentTime(api.currentTime() - 10);\n              api.play();\n            }\n            break;\n          case 34:\n            if (api) {\n              api.currentTime(api.currentTime() + 10);\n              api.play();\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [history, location.pathname, setVideoposition, game_id]);\n\n  useEffect(() => {\n    var iframe = iframeRef.current;\n\n    if (videoRef.current && dp) {\n      const api = videojs(videoRef.current);\n      const clip = {\n        bufferLength: 0,\n        sources: [\n          {\n            type: \"video/mp4\",\n            src: \"_/vid/mp4/\" + dp?.data + \".mp4\",\n          },\n        ],\n        subtitles: [\n          {\n            kind: \"subtitles\",\n            srclang: \"en\",\n            label: \"English\",\n            src: \"_/vid/vtt/en/\" + dp?.data + \".vtt\",\n          },\n        ],\n      };\n      console.log(\"video source\", clip.sources[0].src);\n\n      api.src(clip.sources[0].src);\n\n      // @ts-ignore\n      api.ready((api): void => {\n        if (videoposition > 0) {\n          api.currentTime(videoposition);\n        }\n        api?.play();\n        logGameEvent(\"\", \"start\", \"video\", dp?.data, \"\");\n      });\n\n      api.on(\"progress\", function (e: unknown) {\n        setVideoposition(api.currentTime());\n      });\n\n      api.on(\"pause\", function (e: unknown) {\n        if (api.duration() > api.currentTime() + 0.5) {\n          logGameEvent(\"\", \"pause\", \"video\", dp?.data, api.currentTime());\n        }\n      });\n\n      api.on(\"click\", function togglePause() {\n        var doc = document.getElementById(\"pause\");\n\n        if (api.paused()) {\n          if (doc) {\n            doc.style.display = \"none\";\n          }\n          api.play();\n        } else {\n          if (doc) {\n            doc.style.display = \"block\";\n          }\n          api.pause();\n        }\n      });\n\n      //@ts-ignore\n      api.on(\"ended\", function (e) {\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp?.data, \"\");\n      });\n\n      //@ts-ignore\n      api.on(\"error\", function (e) {\n        console.log(e);\n        logGameEvent(\"\", \"error\", \"video\", dp?.data, \"\");\n      });\n\n      api.load();\n    } else if (dp && iframe) {\n      var player = new Player(iframe);\n      console.log(\"Setting vimeo listenera\");\n      player.on(\"ended\", function () {\n        console.log(\"vimeo ended\");\n        skipVideo();\n        logGameEvent(\"\", \"finish\", \"video\", dp.data, \"\");\n      });\n\n      player.getVideoTitle().then(function (title) {\n        console.log(\"title:\", title);\n      });\n    }\n  }, [dp, skipVideo, logGameEvent, setVideoposition, videoposition]);\n\n  return (\n    <div className=\"video\">\n      <div id=\"player\" className=\"videoplayer functional\">\n        {dp?.video &&\n          (dp.video.vimeo_url ? (\n            <iframe\n              ref={iframeRef}\n              // style={{height: (iframeRef.current?.scrollWidth ?? 600) * 9/16}}\n              src={dp.video.vimeo_url + \"?autoplay=1&texttrack=en\"}\n              frameBorder={0}\n              allow=\"autoplay; texttrack; fullscreen; picture-in-picture\"\n              allowFullScreen\n              title=\"SG4_DP1_0\"\n            ></iframe>\n          ) : (\n            <video\n              ref={videoRef}\n              id=\"vid-player\"\n              className=\"video-js vjs-big-play-centered\"\n            >\n              Please use a different browser\n            </video>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Video;\n","import { FormattedMessage } from \"react-intl\";\nimport \"./Credits.scss\";\n\nconst Credits: React.FC<{}> = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel credits\">\n        <header>\n          <h2>\n            <FormattedMessage\n              id=\"Credits.title\"\n              defaultMessage=\"Credits\"\n              description=\"credits title\"\n            />\n          </h2>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <h2>Funder</h2>\n            <ul>\n              <li>eCampusOntario</li>\n              <li>\n                <a href=\"https://www.ecampusontario.ca/\">ecampusontario.ca</a>\n              </li>\n            </ul>\n\n            <h2>Research Project Manager</h2>\n            <ul>\n              <li>Roxanne Ramjattan, PhD, MSW, RSW</li>\n            </ul>\n\n            <h2>Virtual Gaming Simulation Consultant</h2>\n            <ul>\n              <li>Margaret Verkuyl, NP, PHC, MN</li>\n              <li>Professor, Nursing Centennial College</li>\n            </ul>\n\n            <h2>Cast</h2>\n            <ul>\n              <li>Michael Jenkins (Therapist, Marcus)</li>\n              <li>Catherine Ouimet (Client, Kelly)</li>\n              <li>Cintra Ramkissoon (Friend, Talia)</li>\n            </ul>\n\n            <h2>Film Producer</h2>\n            <ul>\n              <li>Ryan Marley</li>\n            </ul>\n\n            <h2>Editor</h2>\n            <ul>\n              <li>Guino Anderson</li>\n            </ul>\n\n            <h2>Website Designer</h2>\n            <ul>\n              <li>Lucas Michalski</li>\n            </ul>\n\n            <h2>Research Assistants</h2>\n            <h3>Winter 2021</h3>\n            <ul>\n              <li>Grace (Jasper) Bakker </li>\n              <li>Jen Humber </li>\n              <li>Ivan Lange </li>\n              <li>Sophia Miller </li>\n              <li>Cintra Ramkissoon </li>\n            </ul>\n            <h3>Summer 2021</h3>\n            <ul>\n              <li>Daniella Antongiovanni </li>\n              <li>Damon Dam </li>\n              <li>Sandrine Bendavid </li>\n              <li>Tiffani Lucas </li>\n              <li>Megan Williams</li>\n            </ul>\n            <h3>Fall 2021</h3>\n            <ul>\n              <li>Daniella Antongiovanni </li>\n              <li>Damon Dam </li>\n              <li>Sandrine Bendavid </li>\n              <li>Tiffani Lucas </li>\n            </ul>\n\n            <h2>Advisory Committee</h2>\n            <div className=\"advisory-committee\">\n              <h4>Maris Karklins</h4>\n              <h5>\n                Assistive Technologist, Counselling and Accessibility Services{\" \"}\n              </h5>\n              <h6>Seneca College </h6>\n\n              <h4>Erica Watson, MSW, RSW</h4>\n              <h5>Clinical Supervisor & Educational Coordinato </h5>\n              <h6>\n                SickKids Centre | Garry Hurvitz Center for Community Mental\n                Health{\" \"}\n              </h6>\n\n              <h4>Seemab Mushtaq, BA</h4>\n              <h5>Crisis Worker </h5>\n              <h6>Distress Centre of Greater Toronto </h6>\n\n              <h4>Rebecca Oliveira, RN, BScN, CPMHN</h4>\n              <h5>Nurse Educator </h5>\n              <h6>Center for Addiction and Mental Health </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Credits;\n","import \"./Instructions.scss\";\n\ninterface iProps {\n  minSteps: number;\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Instructions: React.FC<iProps> = ({ minSteps, strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h2>Introduction</h2>\n          <div>\n            This virtual gaming simulation is focused on using the best\n            practices for working with a suicidal client. The simulation was\n            generously funded by eCampusOntario.\n          </div>\n        </header>\n\n        <div>\n          <h2>How to Play</h2>\n        </div>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <ul>\n              <li>\n                Watch interactions between Kelly and the mental health\n                counsellor.\n                \n              </li>\n              <li>\n                Following each interaction, you will be asked to select the\n                most appropriate response. Possible responses are classified as:\n                Correct{\" \"}\n                <img\n                  src=\"/images/icon-correct.png\"\n                  alt=\"green circular checkmark icon\"\n                  width=\"20\"\n                  height=\"20\"\n                ></img>\n                , Not the Best{\" \"}\n                <img\n                  src=\"/images/icon-partial.png\"\n                  alt=\"yellow triangular warning icon\"\n                  width=\"20\"\n                  height=\"20\"\n                ></img>\n                , and Incorrect{\" \"}\n                <img\n                  src=\"/images/icon-incorrect.png\"\n                  alt=\"red circular x icon\"\n                  width=\"20\"\n                  height=\"20\"\n                ></img>\n                .\n              </li>\n              <li>\n                You can repeat this game numerous times for practice and to\n                improve your responses.\n              </li>\n              <li>\n                The game can be paused and resumed at any time by leaving the\n                game and returning to this page.\n              </li>\n              <li>\n                At the end of the game you will see a summary report with links\n                to the suggested module readings.\n              </li>\n              <li>This game has sound. Adjust your volume accordingly.</li>\n              <li>\n                The game makes use of high-resolution videos, which require\n                high-speed Internet.\n              </li>\n              <li>The game will take 30-60 minutes to complete.</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Feedback.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Feedback: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const goNext = useCallback(() => {\n    switch (dp?.type) {\n      case \"video\":\n        history.push(`/games/${game_id}/decision/`);\n        break;\n      case \"lo\":\n        history.push(`/games/${game_id}/lo/`);\n        break;\n    }\n  }, [dp?.type, history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\" role=\"alert\">\n        <header>\n          <FormattedMessage\n            id=\"Feedback.title\"\n            defaultMessage=\"Feedback\"\n            description=\"feedback title\"\n            tagName=\"h2\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"button\" onClick={goNext}>\n              <FormattedMessage\n                id=\"General.resume\"\n                defaultMessage=\"Resume Game\"\n                description=\"resume game button\"\n              />\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","import \"./Settings.scss\";\n\nconst Settings: React.FC<{}> = () => {\n  const isFullscreen = false;\n  const subtitlesOn = false;\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel settings\">\n        <header>\n          <h2>Game Options</h2>\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <div className=\"cf\">\n              <h2>Display:</h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_window\"\n                    ng-model=\"sg.fullscreen\"\n                    ng-value=\"false\"\n                    ng-change=\"toggleFullScreen()\"\n                  />\n                  <label\n                    htmlFor=\"mode_window\"\n                    tabIndex={0}\n                    role=\"radio\"\n                    aria-checked={!isFullscreen}\n                    ng-keydown=\"onFullscreenKeydown($event)\"\n                  >\n                    Window\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"display_mode\"\n                    id=\"mode_fullscreen\"\n                    ng-model=\"sg.fullscreen\"\n                    ng-value=\"true\"\n                    ng-change=\"toggleFullScreen()\"\n                  />\n                  <label\n                    htmlFor=\"mode_fullscreen\"\n                    tabIndex={0}\n                    role=\"radio\"\n                    aria-checked={isFullscreen}\n                    ng-keydown=\"onFullscreenKeydown($event)\"\n                  >\n                    Fullscreen\n                  </label>\n                </div>\n              </div>\n            </div>\n            <br />\n            <div className=\"cf\">\n              <h2>Subtitles:</h2>\n              <div className=\"radio\">\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_off\"\n                    ng-model=\"sg.subtitles\"\n                    ng-value=\"false\"\n                    ng-change=\"saveState()\"\n                  />\n                  <label\n                    htmlFor=\"subtitles_off\"\n                    tabIndex={0}\n                    role=\"radio\"\n                    aria-checked={!subtitlesOn}\n                    ng-keydown=\"onSubtitlesKeydown($event)\"\n                  >\n                    Off\n                  </label>\n                </div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"subtitles\"\n                    id=\"subtitles_en\"\n                    ng-model=\"sg.subtitles\"\n                    ng-value=\"true\"\n                    ng-change=\"saveState()\"\n                  />\n                  <label\n                    htmlFor=\"subtitles_en\"\n                    tabIndex={0}\n                    role=\"radio\"\n                    aria-checked={subtitlesOn}\n                    ng-keydown=\"onSubtitlesKeydown($event)\"\n                  >\n                    On\n                  </label>\n                </div>\n              </div>\n            </div>\n            {/* <!--<br>\n\t\t\t\t<div className=\"cf\">\n\t\t\t\t\t<h2>Video Quality:</h2>\n\t\t\t\t\t<div className=\"radio\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_720p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"'-720p'\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_720p\">High (720p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"quality\" id=\"quality_360p\"\n\t\t\t\t\t\t\t\tng-model=\"sg.quality\"\n\t\t\t\t\t\t\t\tng-value=\"''\"\n\t\t\t\t\t\t\t\tng-change=\"saveState()\"/> \n\t\t\t\t\t\t\t<label for=\"quality_360p\">Low (360p)</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>--> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { useMemo } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./Summary.scss\";\nimport {\n  PDFDownloadLink,\n  Document,\n  Page,\n  Text,\n  Link,\n  View,\n} from \"@react-pdf/renderer\";\nimport { Font } from \"@react-pdf/renderer\";\n\nimport { Link as Lonk } from \"react-router-dom\";\nimport { Correctness, DecisionPoint } from \"../hooks/useGameData\";\n\nconst Roboto = require(\"../fnt/Roboto-Regular.ttf\").default as string;\n\nFont.register({\n  family: \"Roboto\",\n  format: \"truetype\",\n  src: Roboto,\n});\n\ninterface iProps {\n  decisionPoints: DecisionPoint[];\n  gameProgress: { id: number; label: string; option: number }[];\n  completed: boolean;\n}\n\nconst correctnessColors: { [key in Correctness]: string } = {\n  correct: \"#009933\",\n  half: \"#808080\",\n  wrong: \"cc0000\",\n};\n\nconst correctnessLabels: { [key in Correctness]: string } = {\n  correct: \"CORRECT\",\n  half: \"PARTIALLY-CORRECT\",\n  wrong: \"INCORRECT\",\n};\n\nconst Summary: React.FC<iProps> = ({\n  gameProgress,\n  decisionPoints,\n  completed,\n}) => {\n  // const [progress, setProgress] = useState([])\n\n  let progress: { question: string; answer: string; correct: Correctness }[] =\n    useMemo(() => {\n      let progress = [];\n      var i;\n      for (i = 0; i < gameProgress.length; i++) {\n        const dp = gameProgress[i];\n        const current = decisionPoints.find(({ id }) => id === dp.id)!;\n        const next = decisionPoints.find(({ id }) => id === dp.option)!;\n\n        progress.push({\n          question: current.message,\n          answer: dp.label,\n          correct: next.correct,\n        });\n      }\n      return progress;\n    }, [decisionPoints, gameProgress]);\n\n  let message: JSX.Element;\n\n  if (completed) {\n    message = (\n      <>\n        <Text>\n          You have completed the game by answering{\" \"}\n          <Text style={{ fontWeight: \"bold\" }}>\n            {\" \"}\n            {progress.length} questions\n          </Text>\n          .\n        </Text>\n        {progress.length ===\n        decisionPoints.filter(({ correct }) => correct === \"correct\").length ? (\n          <Text>\n            You've demonstrated the best possible result! Now play it one more\n            time to make sure it wasn't mere luck :)\n          </Text>\n        ) : (\n          <Text>\n            {\" \"}\n            However, if you give only correct answers it should only take 11\n            questions to complete the scenario. You selected not-the-best-answer{\" \"}\n            {progress.filter(({ correct }) => correct === \"half\").length} times.\n            You selected the wrong answer{\" \"}\n            {progress.filter(({ correct }) => correct === \"wrong\").length}{\" \"}\n            times. See if you can improve your results next time!{\" \"}\n          </Text>\n        )}\n        <Text>\n          Document this encounter by clicking on the practice documentation\n          icon. There you will find a blank documentation form. Once you are\n          done, compare your documentation to the sample provided.{\" \"}\n        </Text>\n        <Text>\n          If not attending an organized debrief, make sure you download and\n          complete the{\" \"}\n          <Link src={`${window.location.origin}/docs/self-assessment.pdf`}>\n            self-debriefing questions\n          </Link>{\" \"}\n          to optimise your learning experience. Scroll down to view results.\n        </Text>\n      </>\n    );\n  } else {\n    message = (\n      <Text>\n        You have answered{\" \"}\n        <Text style={{ fontWeight: \"bold\" }}> {progress.length} questions</Text>\n        . To finish the game go to menu and resume the gameplay.\n      </Text>\n    );\n  }\n\n  const pdfContent = useMemo(() => {\n    let responses = progress.map((dp, i) => (\n      <View key={i}>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>Q: </Text>\n          <Text>{dp.question}</Text>\n        </View>\n        <View>\n          <Text style={{ fontWeight: \"bold\" }}>A: </Text>\n          <Text style={{ color: correctnessColors[dp.correct] }}>\n            {dp.answer} ({correctnessLabels[dp.correct]})\n          </Text>\n        </View>\n      </View>\n    ));\n    const html = (\n      <Document>\n        <Page>\n          {/* <style\n            dangerouslySetInnerHTML={{\n              __html: `html, body { font-family: Helvetica, Arial, sans-serif; font-size: 14px; line-height: 130%; background-color: #ffffff; color: #000;}\n\t\t\t\t\t\t\th1, h2, p, ol { font-weight: normal; margin-top: 0.3em; margin-bottom: 0.3em; padding-top: 0; padding-bottom: 0; line-height: 130%; color: #000; }`,\n            }}\n          /> */}\n          <View\n            style={{\n              fontFamily: \"Roboto\",\n              fontSize: 14,\n              lineHeight: \"130%\",\n              backgroundColor: \"#ffffff\",\n              color: \"#000\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 32,\n                paddingBottom: \"0.3em\",\n                borderBottom: \"2px solid #000000\",\n              }}\n            >\n              Emergency Game Report\n            </Text>\n            <Text style={{ fontSize: 24 }}>Summary</Text>\n            <View>{message}</View>\n            <Text style={{ fontSize: 24 }}>Your Responses</Text>\n            <View>{responses}</View>\n          </View>\n        </Page>\n      </Document>\n    );\n    return html;\n  }, [message, progress]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <FormattedMessage\n            id=\"Summary.title\"\n            defaultMessage=\"Congratulations!\"\n            description=\"Summary title\"\n            tagName=\"h2\"\n          />\n        </header>\n        <div className=\"main summary\">\n          <div className=\"content\">\n            <div>{message}</div>\n            <h2 style={{ fontSize: 24 }}>Your Answers:</h2>\n            <ol className=\"responses\">\n              {progress.map((dp) => (\n                <li>\n                  <div>{dp.question}</div>\n                  <div className={dp.correct}>\n                    <strong style={{ color: correctnessColors[dp.correct] }}>\n                      {dp.answer} ({correctnessLabels[dp.correct]})\n                    </strong>\n                  </div>\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n        <footer>\n          <PDFDownloadLink\n            className=\"button\"\n            document={pdfContent}\n            fileName=\"emergency-progress.pdf\"\n          >\n            {({ blob, url, loading, error }) =>\n              loading ? \"Loading document...\" : \"Download Progress Report\"\n            }\n          </PDFDownloadLink>\n\n          <Lonk to=\"/materials/\">\n            <FormattedMessage\n              id=\"materials.link\"\n              defaultMessage=\"Practice Materials\"\n              description=\"Link to Practice Materials\"\n            />\n          </Lonk>\n\n          {/* <a href=\"/module/_/ui/game/tpl/materials.html\" className=\"button\">\n            {\" \"}\n            Practice Documentation{\" \"}\n          </a> */}\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;\n","import { useCallback } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useHistory, useParams } from \"react-router\";\nimport { DecisionPoint } from \"../hooks/useGameData\";\nimport \"./Transition.scss\";\n\ninterface iProps {\n  decisionPoint: DecisionPoint;\n}\n\nconst Transition: React.FC<iProps> = ({ decisionPoint: dp }) => {\n  const history = useHistory();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const playNextVideo = useCallback(() => {\n    history.push(`/games/${game_id}/video/`);\n  }, [history, game_id]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"panel feedback\">\n        <header>\n          <FormattedMessage\n            id=\"Transition.title\"\n            defaultMessage=\"Game Paused\"\n            description=\"game paused transition title\"\n            tagName=\"h2\"\n          />\n        </header>\n        <div className=\"main\">{dp?.feedback}</div>\n        <footer>\n          <p className=\"controls\">\n            <button className=\"Link\" onClick={playNextVideo}>\n              Resume Game\n            </button>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Transition;\n","import { FormattedMessage } from \"react-intl\";\nimport \"./Principles.scss\";\n\ninterface iProps {\n  strings: {\n    paragraph: string;\n    bullet_list: string[];\n  };\n}\n\nconst Principles: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h2>\n            <FormattedMessage\n              id=\"Principles.title\"\n              defaultMessage=\"Essential Principles\"\n              description=\"Principles title\"\n            />\n          </h2>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <p>{strings.paragraph}</p>\n            <ul>\n              {strings.bullet_list.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Principles;\n","import \"./Chart.scss\";\n\ninterface iProps {\n  image: string;\n}\n\nconst Chart: React.FC<iProps> = ({ image }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h2>Client Chart</h2>\n        </header>\n        <div>\n          <img\n            className=\"chart\"\n            src=\"/images/chart_image.png\"\n            alt=\"Client's Chart with some background information for this visit\"\n          ></img>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;\n","import { FormattedMessage } from \"react-intl\";\nimport \"./Objectives.scss\";\n\ninterface iProps {\n  strings: {\n    introCards: string[];\n  };\n}\n\nconst Objectives: React.FC<iProps> = ({ strings }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel info\">\n        <header>\n          <h2>\n            <FormattedMessage\n              id=\"Scenario.title\"\n              defaultMessage=\"Background and Scenario\"\n              description=\"Scenario title\"\n            />\n          </h2>\n        </header>\n        <div className=\"main\">\n          <div className=\"content cf\">\n            <ul>\n              {strings.introCards.map((list_item) => (\n                <li>{list_item}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Objectives;\n","//////////////////////////////////////////////////\n// Cookies + State, it's messy here\n//////////////////////////////////////////////////\n\nvar maxAge = 21 * 24 * 60;\n\nfunction isLocalStorageAvailable() {\n  var str = \"test\";\n  try {\n    localStorage.setItem(str, str);\n    localStorage.removeItem(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst cookies = {\n  put(key: string, value: string, maxAge: number) {\n    var cookie = `${key}=${value};path=/;max-age=${maxAge};`;\n    console.log(cookie);\n    document.cookie = cookie;\n  },\n  get(cname: string): string | null {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  },\n  remove(key: string) {\n    this.put(key, \"\", -1);\n  },\n};\n\nexport const VHEStorage = {\n  set: function (key: string, value: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, value);\n    } else {\n      cookies.put(key, value, maxAge);\n    }\n  },\n  get: function (key: string): string | null {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r;\n  },\n  setObject: function (key: string, value: any) {\n    const o = JSON.stringify(value);\n    if (isLocalStorageAvailable()) {\n      window.localStorage.setItem(key, o);\n    } else {\n      cookies.put(key, o, maxAge);\n    }\n  },\n  getObject: function (key: string) {\n    var r = isLocalStorageAvailable()\n      ? window.localStorage.getItem(key)\n      : cookies.get(key);\n    return r ? JSON.parse(r) : false;\n  },\n  remove: function (key: string) {\n    if (isLocalStorageAvailable()) {\n      window.localStorage.removeItem(key);\n    } else {\n      cookies.remove(key);\n    }\n  },\n};\n\nconst useStorage = () => {\n  return VHEStorage;\n};\n\nexport default useStorage;\n","import { VHEStorage } from \"./useStorage\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { generateUUID } from \"../util\";\n\ninterface iGameSave {\n  uuid: string;\n  gamesaved: boolean;\n  subtitles: boolean;\n  fullscreen: boolean;\n  currentStep: number;\n  videoposition: number;\n  progress: {\n    id: number;\n    label: string;\n    option: number;\n  }[];\n}\n\nconst useGameState = (storageKey: string) => {\n  const [loaded] = useState(\n    VHEStorage.getObject(storageKey) as iGameSave | null\n  );\n\n  const [uuid] = useState(loaded?.uuid ?? generateUUID());\n  const [gamesaved, setGamesaved] = useState(loaded?.gamesaved ?? false);\n  const [currentStep, setCurrentStep] = useState(loaded?.currentStep ?? 0);\n  const [videoposition, setVideoposition] = useState(\n    loaded?.videoposition ?? 0\n  );\n  const [progress, setProgress] = useState(loaded?.progress ?? []);\n\n  useEffect(() => {\n    VHEStorage.setObject(storageKey, {\n      uuid,\n      gamesaved,\n      subtitles: false,\n      fullscreen: false,\n      currentStep,\n      videoposition,\n      progress,\n    });\n  }, [uuid, gamesaved, currentStep, videoposition, progress, storageKey]);\n\n  const gameState = useMemo(\n    () => ({\n      newGame: () => {\n        setGamesaved(true);\n        setCurrentStep(0);\n        setVideoposition(0);\n        setProgress([]);\n      },\n      selectOption: (nextId: number, label: string) => {\n        setProgress((ps) => [\n          ...ps,\n          {\n            id: currentStep,\n            label: label,\n            option: nextId,\n          },\n        ]);\n        setCurrentStep(nextId);\n      },\n      currentStep,\n      setCurrentStep,\n      videoposition,\n      setVideoposition,\n      progress,\n      gamesaved,\n    }),\n    [currentStep, gamesaved, progress, videoposition]\n  );\n\n  return gameState;\n};\n\nexport default useGameState;\n","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\n\nexport function generateUUID(): string {\n  var r: string;\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  r = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return r;\n}\n\nexport const useGotoMenu = () => {\n  const history = useHistory();\n  const logGameEvent = useLogGameEvent();\n  const { game_id } = useParams<{ game_id: string }>();\n\n  const gotoMenu = useCallback(() => {\n    logGameEvent(\"\", \"open\", \"menu\", \"\", \"\");\n    history.push(`/games/${game_id}/`);\n  }, [history, logGameEvent, game_id]);\n  return gotoMenu;\n};\n\nexport function getBrowser() {\n  var browser, isIE;\n  // @ts-ignore\n  isIE = /*@cc_on!@*/ false || !!document.documentMode;\n\n  // @ts-ignore\n  if (\n    // @ts-ignore\n    (!!window.opr && !!opr.addons) ||\n    // @ts-ignore\n    !!window.opera ||\n    navigator.userAgent.indexOf(\" OPR/\") >= 0\n  ) {\n    browser = \"Opera\";\n\n    // @ts-ignore\n  } else if (typeof InstallTrigger !== \"undefined\") {\n    browser = \"Firefox\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    })(\n      // @ts-ignore\n      !window[\"safari\"] ||\n        // @ts-ignore\n        (typeof safari !== \"undefined\" && safari.pushNotification)\n    )\n  ) {\n    browser = \"Safari\";\n  } else if (isIE) {\n    browser = \"Internet Explorer\";\n    // @ts-ignore\n  } else if (!isIE && !!window.StyleMedia) {\n    browser = \"Edge\";\n    // @ts-ignore\n  } else if (\n    // @ts-ignore\n    !!window.chrome &&\n    // @ts-ignore\n    (!!window.chrome.webstore || !!window.chrome.runtime)\n  ) {\n    browser = \"Chrome\";\n  } else {\n    browser = \"Unknown browser\";\n  }\n  return browser;\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\n\nimport {\n  Switch,\n  Route,\n  useHistory,\n  useRouteMatch,\n  Redirect,\n} from \"react-router-dom\";\nimport { useIntl } from \"react-intl\";\n\nimport Menu from \"./pages/Menu\";\nimport \"./App.scss\";\n\nimport { useGameData } from \"./hooks/useGameData\";\n\nimport Objectives from \"./pages/Objectives\";\nimport Decision from \"./pages/Decision\";\nimport Video from \"./pages/Video\";\nimport Credits from \"./pages/Credits\";\nimport Instructions from \"./pages/Instructions\";\nimport Feedback from \"./pages/Feedback\";\nimport Settings from \"./pages/Settings\";\nimport Summary from \"./pages/Summary\";\nimport Transition from \"./pages/Transition\";\nimport Principles from \"./pages/Principles\";\nimport Chart from \"./pages/Chart\";\nimport Scenario from \"./pages/Scenario\"\nimport useLogGameEvent from \"./hooks/useLogGameEvent\";\nimport { getBrowser } from \"./util\";\nimport useGameState from \"./hooks/useGameState\";\n\ninterface iProps {\n  gameId: string;\n}\n\nconst App: React.FC<iProps> = ({ gameId }) => {\n  const history = useHistory();\n  let { path, url } = useRouteMatch();\n\n  const logGameEvent = useLogGameEvent();\n  const locale = useIntl().locale;\n\n  const gameData = useGameData(gameId, locale);\n  const gameState = useGameState(gameId);\n  const minSteps = gameData.decisionpoints.filter(\n    ({ correct }) => correct === \"correct\"\n  ).length;\n\n  const [navMenuExpanded, setNavMenuExpanded] = useState(true);\n  const handleMenuToggleButtonClick = useCallback(\n    () => setNavMenuExpanded((expanded) => !expanded),\n    []\n  );\n\n  const lastDecisionPoint =\n    gameData.decisionpoints[gameData.decisionpoints.length - 1].id ===\n    gameState.currentStep;\n\n  const currentDecisionPoint = useMemo(() => {\n    return gameData.decisionpoints.find(\n      ({ id }) => id === gameState.currentStep\n    )!;\n  }, [gameData.decisionpoints, gameState.currentStep]);\n\n  const handleStartNewGame = useCallback(() => {\n    gameState.newGame();\n    setNavMenuExpanded(false);\n\n    history.push(`${url}/intro/`);\n    logGameEvent(\"\", \"start\", \"game\", getBrowser(), \"\");\n  }, [history, logGameEvent, gameState, url]);\n\n  const handleResumeGame = useCallback(() => {\n    var dp = currentDecisionPoint;\n    setNavMenuExpanded(false);\n\n    if (dp && lastDecisionPoint) {\n      history.push(`${url}/summary/`);\n    } else if (gameState.videoposition > 0.1) {\n      history.push(`${url}/video/`);\n    } else {\n      history.push(`${url}/decision/`);\n    }\n\n    logGameEvent(\"\", \"resume\", \"game\", \"\", \"\");\n  }, [\n    history,\n    logGameEvent,\n    gameState.videoposition,\n    currentDecisionPoint,\n    lastDecisionPoint,\n    url,\n  ]);\n\n  const handleOptionChosen = useCallback(\n    (nextId: number, label: string) => {\n      const next = gameData.decisionpoints.find(({ id }) => id === nextId);\n\n      gameState.selectOption(nextId, label);\n\n      logGameEvent(\"\", \"select\", \"answer\", label, next?.correct);\n\n      switch (next?.type) {\n        case \"video\":\n          history.push(`${url}/video/`);\n          break;\n        case \"lo\":\n          if (next.feedback > \"\") {\n            // If there's feedback, show it then advance\n            history.push(`${url}/feedback/`);\n          } else {\n            history.push(`${url}/lo/`);\n          }\n          break;\n      }\n\n      // google analytics ???\n    },\n    [gameData.decisionpoints, history, logGameEvent, gameState, url]\n  );\n\n  const handleVideoFinished = useCallback(() => {\n    const dp = currentDecisionPoint;\n    gameState.setVideoposition(0);\n\n    if (lastDecisionPoint) {\n      history.push(`${url}/summary/`);\n    } else if (dp && dp.options.length > 0) {\n      if (dp.feedback > \"\") {\n        history.push(`${url}/feedback/`);\n      } else {\n        // No feedback means go directly to the decision\n        history.push(`${url}/decision/`);\n      }\n    } else {\n      gameState.setCurrentStep(gameState.currentStep + 1);\n      if (dp?.next) {\n        // If there are no options, go to the next decision point\n        history.push(`${url}/lo/`);\n      } else {\n        history.push(`${url}/transition/`);\n      }\n    }\n  }, [currentDecisionPoint, history, lastDecisionPoint, gameState, url]);\n\n  return (\n    <div className=\"fullscreen\" style={gameData.colors as React.CSSProperties}>\n      <header className=\"nav-header\">\n        <button className=\"icon-menu\" onClick={handleMenuToggleButtonClick}>\n          <i className=\"icomoon icon-menu-2\"></i>\n        </button>\n        <h1>{gameData.strings.menu.title}</h1>\n      </header>\n\n      <div className=\"body\">\n        <nav\n          className={`nav-menu ${\n            navMenuExpanded ? \"nav-menu--expanded\" : \"nav-menu--collapsed\"\n          }`}\n        >\n          <Menu\n            strings={gameData.strings.menu}\n            startNewGame={handleStartNewGame}\n            resumeGame={handleResumeGame}\n            gamesaved={gameState.gamesaved}\n            pagesToShow={{\n              principles: !!gameData.strings.principles,\n            }}\n          />\n        </nav>\n\n        <div className=\"view\" role=\"application\">\n          <Switch>\n            <Route path={`${path}/credits`}>\n              <Credits />\n            </Route>\n\n            <Route path={`${path}/decision`}>\n              <Decision\n                decisionPoint={currentDecisionPoint}\n                onOptionChosen={handleOptionChosen}\n              />\n            </Route>\n\n            <Route path={`${path}/feedback`}>\n              <Feedback decisionPoint={currentDecisionPoint} />\n            </Route>\n\n            <Route path={`${path}/instructions`}>\n              <Instructions\n                minSteps={minSteps}\n                strings={gameData.strings.instructions}\n              />\n            </Route>\n\n            <Route path={`${path}/objectives`}>\n              <Objectives strings={gameData.strings.objectives} />\n            </Route>\n\n            <Route path={`${path}/chart`}>\n              <Chart image={\"\"} />\n            </Route>\n\n            {gameData.strings.principles ? (\n              <Route path={`${path}/principles`}>\n                <Principles strings={gameData.strings.principles} />\n              </Route>\n            ) : null}\n\n            <Route path={`${path}/settings`}>\n              <Settings />\n            </Route>\n\n            <Route path={`${path}/scenario`}>\n              <Scenario strings={gameData.strings.intro} />\n            </Route>\n\n            <Route path={`${path}/summary`}>\n              <Summary\n                decisionPoints={gameData.decisionpoints}\n                gameProgress={gameState.progress}\n                completed={lastDecisionPoint}\n              />\n            </Route>\n\n            <Route path={`${path}/transition`}>\n              <Transition decisionPoint={currentDecisionPoint} />\n            </Route>\n\n            <Route path={`${path}/video`}>\n              <Video\n                decisionPoint={currentDecisionPoint}\n                onVideoFinished={handleVideoFinished}\n                videoposition={gameState.videoposition}\n                setVideoposition={gameState.setVideoposition}\n              />\n            </Route>\n\n            <Route path={`${path}/lo`}>Somethings going on here, I swear</Route>\n\n            <Route path=\"/\">\n              <Redirect to={`${url}/instructions`} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport \"./Menu.scss\";\n\ninterface iProps {}\n\nconst Home: React.FC<iProps> = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"panel menu\">\n        <header>\n          <FormattedMessage\n            id=\"Home.title\"\n            defaultMessage=\"Crisis Intervention\"\n            description=\"Title for homepage\"\n            tagName=\"h2\"\n          />\n        </header>\n        <div className=\"main\">\n          <div className=\"content\">\n            <ul className=\"controls\">\n              <li>\n                <Link to=\"/games/emergency\">\n                  <FormattedMessage\n                    id=\"Home.emergency\"\n                    defaultMessage=\"Emergency Room\"\n                    description=\"Name for emergency game\"\n                  />\n                </Link>\n              </li>\n              <li>\n                <Link to=\"./games/crisis_intervention\">\n                  <FormattedMessage\n                    id=\"Home.crisisIntervention\"\n                    defaultMessage=\"Crisis Intervention\"\n                    description=\"Crisis intervention game name\"\n                  />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { LoggingContextProvider } from \"./hooks/useLogGameEvent\";\n\nimport enMessages from \"./lang-compiled/en.json\";\nimport frMessages from \"./lang-compiled/fr.json\";\nimport Home from \"./pages/Home\";\n\nconst locale = \"en\" as string;\nconst messages = locale === \"fr\" ? frMessages : enMessages;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider messages={messages} locale={locale} defaultLocale=\"en\">\n      <Router basename=\"/\">\n        <LoggingContextProvider>\n          <Switch>\n            <Route path=\"/games/:game_id\">\n              {(params) => <App gameId={params.match?.params.game_id!} />}\n            </Route>\n            <Route>\n              <Home />\n            </Route>\n          </Switch>\n        </LoggingContextProvider>\n      </Router>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}